name: build
on:
  push: []
  pull_request: []

jobs:
  build_and_test:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
      if: github.event_name != 'pull_request'
      with:
        submodules: recursive
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request'
      with:
        submodules: recursive
        ref: ${{ github.pull_request.head.sha }}
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.2.207'
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'
    # https://github.com/actions/setup-dotnet/issues/25#issuecomment-557570168
    - run: 'rsync -a ${DOTNET_ROOT/3.1.301/2.2.207}/* $DOTNET_ROOT/'
    - run: dotnet build
    - run: dotnet test
    - run: LANG=ar_SA.UTF8 LANGUAGE="$LANG" LC_ALL="$LANG" dotnet test
    - run: LANG=he_IL.UTF8 LANGUAGE="$LANG" LC_ALL="$LANG" dotnet test
    - run: LANG=fr_FR.UTF8 LANGUAGE="$LANG" LC_ALL="$LANG" dotnet test
  deploy:
    needs: build_and_test
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
      if: github.event_name != 'pull_request'
      with:
        submodules: recursive
    - uses: actions/checkout@v2
      if: github.event_name == 'pull_request'
      with:
        submodules: recursive
        ref: ${{ github.pull_request.head.sha }}
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'
    - name: bulid
      run: |
        dotnet_args="-c Release -p:NoPackageAnalysis=true"
        if [[ ! "$GITHUB_REF" =~ ^refs/tags/* ]]; then
          project_suffix=dev.${{ github.sha }}
          dotnet_args="$dotnet_args --version-suffix $project_suffix"
        fi

        dotnet build $dotnet_args
        dotnet pack  $dotnet_args
    - name: push
      if: github.event_name != 'pull_request'
      run: |
        if [[ "$NUGET_API_KEY" != "" ]]; then
          dotnet nuget push ./Bencodex/bin/Release/Bencodex.*.nupkg \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json
        fi
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
